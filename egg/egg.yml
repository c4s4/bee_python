- build:       egg
  default:     all
  description: "Generate a Python egg project"
  extends:     ":python:python.yml"

- properties:
    name:        egg
    description: This script will generate a Python egg project.

- target:      prompt
  description: "Prompt for project information"
  script:
  - print: :description
  - prompt:
      message: "What is the project's name?"
      default: :name
      property: name
  - rb: "pkg = name.downcase"

- target:      generate
  depends:     prompt
  description: "Generate project"
  script:
  - print: "Generating project..."
  - rb: |
      error "A directory named '#{name}' already exists, aborting" if
        File.exists?("#{here}/#{name}")
  - mkdir: "#{here}/#{name}"
  - mkdir: "#{here}/#{name}/#{pkg}"
  - mkdir: "#{here}/#{name}/test"
  - erb:
      src:  "#{base}/egg/build.yml"
      dest: "#{here}/#{name}/build.yml"
  - erb:
      src:  "#{base}/egg/script.py"
      dest: "#{here}/#{name}/#{pkg}/#{pkg}.py"
  - erb:
      src:  "#{base}/egg/test.py"
      dest: "#{here}/#{name}/test/test_#{pkg}.py"
  - cp:
      src:  "#{base}/egg/setup.erb"
      dest: "#{here}/#{name}/setup.erb"
  - cp:
      src:  "#{base}/egg/ez_setup.py"
      dest: "#{here}/#{name}/ez_setup.py"
  - cp:
      src:  "#{base}/egg/pylint.cfg"
      dest: "#{here}/#{name}/pylint.cfg"
  - touch:  "#{here}/#{name}/#{pkg}/__init__.py"

- target:      enjoy
  depends:     generate
  description: "Print information about project customization"
  script:
  - print: |
      Project has been generated in directory '#{name}'. Type 'bee -b' in
      the project directory to print information about generated build file.
      Enjoy!

- target: all
  depends: [prompt, generate, enjoy]

